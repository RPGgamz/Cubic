<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

//flash
flash = true;
flash_speed_start = .025;
flash_speed = flash_speed_start;
flash_speed_incr = .005;
flash_alpha = 0;
flash_alpha_max = .9;
flash_alpha_min = 0;

last_alpha = 0;

//fade-out/in
fade_speed = .01;
fade_alpha = 0;

//room transition
into_pz = false;
from_pz = false;

target_room = main_menu_1;
target_door = 100;
cube = noone;
cube_lvl = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flash -&gt; fade out -&gt; room change -&gt; fade in

alarm[0]++;

if (flash) { //flash
    if (flash_alpha &gt;= last_alpha) {
        last_alpha = flash_alpha;
        flash_alpha += flash_speed;
        flash_speed += flash_speed_incr;
        
        if (flash_alpha &gt;= flash_alpha_max) {
            flash_alpha = flash_alpha_max;
            last_alpha = flash_alpha_max+1;
            flash_speed = flash_speed_start*2;
            
            alarm[0] = 3; //hvor længe "max alpha" varer
        }
    } else {
        last_alpha = flash_alpha;
        flash_alpha -= flash_speed;
        flash_speed -= flash_speed_incr/4;
        
        if (flash_alpha &lt;= flash_alpha_min) {
            flash_alpha = flash_alpha_min;
            last_alpha = 0; //vigtigt at den er 0, bruger den i fade out/in
            flash_speed = flash_speed_start;
            alarm[0] = 30; //hvor længe der går før fade begynder
            
            flash = false;
        }
    }
} else { //fade out
    if (fade_alpha &gt;= last_alpha) {
        last_alpha = fade_alpha;
        fade_alpha += fade_speed;
        
        if (fade_alpha &gt;= 1) {
            fade_alpha = 1;
            last_alpha = 1+1;
            
            //SKIFT ROOM
            alarm[0] = 12;
        }
    } else { //fade in
        if (into_pz) {
            scr_room_goto(target_room, -1, cube_lvl);
            instance_destroy(cube);
            into_pz = false;
        }
        if (from_pz) {
            scr_room_goto(target_room, target_door, cube_lvl);
            from_pz = false;
        }    
        last_alpha = fade_alpha;
        fade_alpha -= fade_speed;
        
        if (fade_alpha &lt;= 0) {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord("L"))) {
    alarm[0] = 1;
    show_debug_message("test");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flash) {
    draw_set_color(c_white);
    draw_set_alpha(flash_alpha);
    draw_rectangle(0, 0, room_width, room_height, false);
} else {
    draw_set_color(c_black);
    draw_set_alpha(fade_alpha);
    draw_rectangle(0, 0, room_width, room_height, false);
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
