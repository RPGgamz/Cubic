<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initiate

//settings (axel settings er duration=60 fade_duration=10)
trail_duration = 10;
trail_fade_duration = 60; //kommer efter trail_duration
trail_alpha = 0.10;
//settings til noget underligt noget som jeg næsten har slået fra
hardness_center = 1; //0 to 1. 0 is no trail pixels, 1 is all pixels are trail.
hardness_edge = 0.2;
hardness_trans = -1; //-1 to 1. if center is harder than edge: -1 would mean, going from center to edge, veryfast aproaching edge hardness at first, then slowly. 1 would mean, going from center to edge, slowly aproaching edge hardness at first, then fast.

//the array
x=room_width;
repeat(room_width) {
    x--;
    y=room_height;
    repeat(room_height) {
        y--;
        timer[x,y] = 0;
    }
}

//the surface
surf = surface_create(room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///update the timer

//tick down
x=0;
repeat(room_width) {
    y=0;
    repeat(room_height) {
        if (timer[x,y] &gt; 0) timer[x,y] -= 1;
        y++;
    }
    x++;
}

//set timer under the cube
if (obj_control.state = scr_move) {
    var w = sprite_get_width(spr_cube);
    var h = sprite_get_height(spr_cube);
    x = obj_cube.x - 5;
    var y_min = obj_cube.y - 5; //used like x. The loop just needs 2 y variables, so here we use this one
    
    var pixelnr = 1;
    var rng_treshold, dist;
    var a = -abs(hardness_edge - hardness_center) + abs(hardness_edge - hardness_center)*(hardness_trans + 1);
    //(adjust size and topleft corner, if x or y &lt;0)
    switch (obj_control.slide_dir) {
        case "left":
            x += w;
            w = obj_control.movespeed;
            break;
        case "right":
            x -= obj_control.movespeed
            w = obj_control.movespeed;
            break;
        case "up":
            y_min += h;
            h = obj_control.movespeed;
            break;
        case "down":
            y_min -= obj_control.movespeed
            h = obj_control.movespeed;
            break;
    }
    if (x &lt; 0) {
        w = w+x
        if (w &lt; 0) w = 0;
        x = 0;
    }
    if (y_min &lt; 0) {
        h = h+y_min
        if (h &lt; 0) h = 0;
        y_min = 0;
    }
    //(the loop)
    repeat(w) {
        y = y_min;
        repeat(h) {
            dist = scr_forest_trail_dist(w, h, pixelnr);
            rng_threshold = ((dist-1)*a + hardness_edge - hardness_center)*dist + hardness_center; //factored version of what's in geogebra
            /*if (random(1) &lt; rng_threshold)*/ timer[x,y] = trail_duration + trail_fade_duration;
            y++;
            pixelnr++;
        }
        x++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//update the surf
if (!surface_exists(surf)) surf = surface_create(room_width, room_height);
surface_set_target(surf);
//draw_set_alpha(trail_alpha);
draw_enable_alphablend(false);

draw_clear_alpha(c_black, 0);
draw_set_color(c_black);
x=0;
repeat(room_width) {
    y=0;
    repeat(room_height) {
        if (timer[x,y] != 0) {
            if (timer[x,y] != 0) {
                if (timer[x,y] &lt; trail_fade_duration) draw_set_alpha(trail_alpha*timer[x,y]/trail_fade_duration);
                else draw_set_alpha(trail_alpha);
            }
            draw_point(x,y);
        }
        y++;
    }
    x++;
}

draw_set_alpha(1);
draw_enable_alphablend(true);
surface_reset_target();

//draw the surf
draw_surface(surf, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
