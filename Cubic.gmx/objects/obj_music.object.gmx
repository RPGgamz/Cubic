<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global_music = audio_emitter_create();
playing = false;
gain = 50/100;

audio_master_gain(obj_control.master_gain);

amb_forest = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop zone when gain = 0
if (!instance_exists(obj_zone)) {
    audio_stop_sound(snd_zone_heavy);
    audio_stop_sound(snd_zone_light);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_gain(global_music, gain);

/*
if (amb_forest) {
    if (!audio_is_playing(snd_amb_birds_1) or !audio_is_playing(snd_amb_birds_2) or !audio_is_playing(snd_amb_birds_3)) {
        if (!audio_is_playing(snd_amb_birds_long_1)) {
            if (irandom_range(0, 1)) {
                audio_sound_gain(snd_amb_birds_1, .5, 0);
                show_debug_message("1");
                audio_play_sound(snd_amb_birds_1, 10, false);
            } else if (irandom_range(0, 1)) {
                audio_sound_gain(snd_amb_birds_2, .5, 0);
                show_debug_message("2");
                audio_play_sound(snd_amb_birds_2, 10, false);
            } else {
                audio_sound_gain(snd_amb_birds_3, .5, 0);
                show_debug_message("3");
                audio_play_sound(snd_amb_birds_3, 10, false);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ensuring zone sounds aren't played when entering af zone-room
if (!instance_exists(obj_zone)) {
    audio_stop_sound(snd_zone_heavy);
    audio_stop_sound(snd_zone_light);
    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///zone sound
if (instance_exists(obj_zone)) {
    if !(room == pz_tutorial or room == pz_green_forest_6a or room == pz_green_forest_9a or room == pz_green_forest_11a or room == pz_green_forest_7c or room == pz_green_forest_4d or room == pz_green_forest_9d) {
        if (audio_is_playing(snd_zone_light)) {
            audio_stop_sound(snd_zone_light);
        }
        audio_sound_gain(snd_zone_light, 0, 0);
        audio_sound_gain(snd_zone_light, 6/100, 1420);
        audio_play_sound(snd_zone_light, 9, true);
    }
} else if (room != pz_tutorial or room != pz_green_forest_6a or room != pz_green_forest_9a or room != pz_green_forest_11a or room != pz_green_forest_7c or room != pz_green_forest_4d or room != pz_green_forest_9d) {
    audio_sound_gain(snd_zone_heavy, 0, 400);
    audio_sound_gain(snd_zone_light, 0, 400);
    with (obj_music) {alarm[0] = 400;}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///forest music
/*
if (room == rm_green_forest_3a) {
    audio_play_sound_on(global_music, snd_ost_entering_green, false, 12);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///forest ambience
var vol = 30/100;
if (room == rm_green_forest_3a &amp;&amp; !amb_forest) {
    amb_forest = true;
    
    audio_sound_gain(snd_amb_birds_long_1, 0, 0);
    audio_sound_gain(snd_amb_birds_long_1, vol, 2100);
    audio_play_sound(snd_amb_birds_long_1, 10, true);
} else if (room == pz_green_forest_6a or room == pz_green_forest_9a or room == pz_green_forest_11a or room == pz_green_forest_7c or room == pz_green_forest_4d or room == pz_green_forest_9d or room == rm_green_forest_12a or room == rm_green_forest_11d) {
    audio_sound_gain(snd_amb_birds_long_1, 6/100, 600);
} else if (amb_forest) {
    audio_sound_gain(snd_amb_birds_long_1, vol, 600);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_emitter_free(global_music);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
