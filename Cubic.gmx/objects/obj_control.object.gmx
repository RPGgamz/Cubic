<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init variables
state = scr_idle;
cubes = ds_list_create();
movespeed = 2;
target_door = -1;
traveling_cube_lvl = 1;
queued_dir = "still";
move_queue_timer = 0;

bb = (obj_display_manager.ideal_width-120)/2*obj_display_manager.view_zoom; //black bar width
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///complete animation
complete_animation = false;
animation = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///audio master variables
muted = false;
master_gain = 40/100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///delaying the flash/fade to match the sound

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///complete animation
if (complete_animation) {
    alarm[2]++;
    animation++;
    
    var bb = (obj_display_manager.ideal_width-120)/2*obj_display_manager.view_zoom;
    
    if (animation &gt;= (120-(2*bb))) {
        complete_animation = false;
        animation = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Queue move timer
queued_dir = "still";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///state and useful hotkeys
//hotkeys
scr_hotkeys();

//state
script_execute(state);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///kom ind ad den rigtige dør (overworld)
room_persistent = false;

if !(target_door = -1) {
    var entrance = noone;
    //find døren, hvis den er en dør
    for (var i = 0; i &lt; instance_number(obj_door); i++) {
        var this_door = instance_find(obj_door, i);
        if (this_door.ID = target_door) {
            entrance = this_door;
            break;
        }
    }
    
    //find døren, hvis den er en zone i virkeligheden
    if (entrance = noone) {
        for (var i = 0; i &lt; instance_number(obj_zone); i++) {
            var this_zone = instance_find(obj_zone, i);
            if (this_zone.ID = target_door) {
                entrance = this_zone;
                //find den mur der skal låses op
                for (var j = 0; j &lt; instance_number(obj_locked_wall); j++) {
                    var this_wall = instance_find(obj_locked_wall, j);
                    if (this_zone.target_locked_wall == this_wall.ID &amp;&amp; ds_map_find_value(obj_save_data.pzones, this_zone.target_room) == -1) {
                        this_wall.alarm[0] = 1;
                        state = scr_nothing;
                        break;
                    }
                }
                break;
            }
        }
    }
    
    if !(entrance == noone) {
        //lav en cube
        var new_cube = instance_create(entrance.x, entrance.y, obj_cube);
        new_cube.lvl = traveling_cube_lvl;
        new_cube.image_index = new_cube.lvl;
        
        //move state, men kun for den nye cube. 
        slide_dir = entrance.dir;
        if (instance_exists(obj_forest_transition)) {
            obj_forest_transition.new_cube = new_cube;
        } else if !(slide_dir == "still") {
                scr_move_only(new_cube);
        }
    }
}

    
            
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera follow (openworld)
if (!instance_exists(obj_pz)){
    view_xview[1] = obj_cube.x - view_wview[1]/2;
    view_yview[1] = obj_cube.y - view_hview[1]/2;
    
    bb = (obj_display_manager.ideal_width-120)/2*obj_display_manager.view_zoom;
    if (view_xview[1] &lt; -bb) view_xview[1] = -bb;
    if (view_xview[1] &gt; room_width-120*obj_display_manager.view_zoom-bb) view_xview[1] = room_width-120*obj_display_manager.view_zoom-bb;
    if (view_yview[1] &lt; 0) view_yview[1] = 0;
    if (view_yview[1] &gt; room_height-108*obj_display_manager.view_zoom) view_yview[1] = room_height-108*obj_display_manager.view_zoom;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy ds_list: cubes
ds_list_destroy(cubes);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (complete_animation) {
    draw_set_color(c_white);
    draw_rectangle(view_wview[1]/2-animation, view_hview[1]/2-animation, view_wview[1]/2+animation, view_hview[1]/2+animation, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
