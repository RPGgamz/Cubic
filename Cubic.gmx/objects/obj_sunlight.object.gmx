<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-300</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sunbeams = 8;
alpha_max = 0.18;

for (var i = 0; i &lt; sunbeams; i++) {
    alpha[i, 0] = random_range(0, 0.12); //alpha set to random
    alpha[i, 1] = choose(0.000125, 0.0002, 0.00025, 0.0005, 0.00075); //random alpha_incr
    alpha[i, 2] = false; //max set to 0
    alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_2, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5); //random sprite
    alpha[i, 4] = 0; //Distance from last sunbeam
    alpha[i, 5] = 0; //Total distance to last sunbeam
    alpha[i, 6] = irandom_range(28, 84); //i.y
    
    for (var j = 0; j &lt; i; j++) {
        if (alpha[j, 3] == spr_sunlight_2) {
            alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5); //random sprite
        }
    }
    alpha[i, 4] = irandom_range(13, 15); //i.x - (i-1).x 
    if (i &gt; 0 &amp;&amp; alpha[i, 6] &lt; alpha[i-1, 6]) {
        alpha[i, 4] += (alpha[i-1, 6] - alpha[i, 6]);
    }
    alpha[i, 5] = 0;
    for (var j = 0; j &lt; i; j++) {
        alpha[i, 5] += alpha[j, 4]; // (i-1).x 
    }
    if (i == 0) {
        alpha[i, 6] = irandom_range(26, 46); //setting the first beam on the top of the screen --&gt; more beams total
    }
}

alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fade in/out for each sunbeam

for (var i = 0; i &lt; sunbeams; i++) {
    if (alpha[i, 0] &lt; alpha_max &amp;&amp; alpha[i, 2] == false) {
        alpha[i, 0] += alpha[i, 1];
        if (alpha[i, 0] &gt;= alpha_max) {
            alpha[i, 0] = alpha_max;
            alpha[i, 2] = true;
        }
    } else if (alpha[i, 0] &gt; 0 &amp;&amp; alpha[i, 2] == true) {
        alpha[i, 0] -= alpha[i, 1];
        if (alpha[i, 0] &lt;= 0) {
            alpha[i, 0] = 0;
            alpha[i, 2] = false;
            
            //when faded out -&gt; new sunbeam sprite
            alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_2, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5);
            for (var j = 0; j &lt; i; j++) {
                if (alpha[j, 3] == spr_sunlight_2) {
                    alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5); //random sprite
                }
            }       
        }
    }
}
alarm[0]++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///redo the light setup

for (var i = 0; i &lt; sunbeams; i++) {
    alpha[i, 0] = random_range(0, 0.12); //alpha set to random
    alpha[i, 1] = choose(0.000125, 0.0002, 0.00025, 0.0005, 0.00075); //random alpha_incr
    alpha[i, 2] = false; //max set to 0
    alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_2, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5); //random sprite
    alpha[i, 4] = 0; //Distance from last sunbeam
    alpha[i, 5] = 0; //Total distance to last sunbeam
    alpha[i, 6] = irandom_range(28, 84); //i.y
    
    for (var j = 0; j &lt; i; j++) {
        if (alpha[j, 3] == spr_sunlight_2) {
            alpha[i, 3] = choose(spr_sunlight_1, spr_sunlight_3, spr_sunlight_4, spr_sunlight_5); //random sprite
        }
    }
    alpha[i, 4] = irandom_range(13, 15); //i.x - (i-1).x 
    if (i &gt; 0 &amp;&amp; alpha[i, 6] &lt; alpha[i-1, 6]) {
        alpha[i, 4] += (alpha[i-1, 6] - alpha[i, 6]);
    }
    alpha[i, 5] = 0;
    for (var j = 0; j &lt; i; j++) {
        alpha[i, 5] += alpha[j, 4]; // (i-1).x 
    }
    if (i == 0) {
        alpha[i, 6] = irandom_range(26, 46); //setting the first beam on the top of the screen --&gt; more beams total
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///drawing the beams


for (var i = 0; i &lt; sunbeams; i++) {
    draw_set_alpha(alpha[i, 0]);
    draw_sprite(alpha[i, 3], 0, alpha[i, 5] + alpha[i, 4], alpha[i, 6]);
    
    
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
